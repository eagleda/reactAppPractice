//변수 사용 연습 $: 변수 선언?
$red: #fa5252;
$orange: #fd7e14;
$yellow:#fcc419;
$green: #40c057;
$blue: #339af0;
$indigo: #5cfcfa;
$violet: #7950f2;

// 믹스인 만들기(재사용되는 스타일 블록을 함수처럼 사용할 수 있음)
/*
Mixin은 객체 지향 프로그래밍(OOP)에서
다중 상속을 간단하고 유연하게 구현하기 위한 개념입니다.
믹스인은 클래스가 여러 부모 클래스의 메서드와 속성을
상속할 수 있게 합니다.
이로써 코드 재사용성을 높이고, 모듈화된 기능을 제공할 수 있습니다.

객체 지향 프로그래밍 언어에서 믹스인은 다른 클래스의 부모클래스가 되지 않으면서
다른 클래스에서 사용할 수 있는 메서드를 포함하는 클래스이다
상속 관계 없이 코드 재사용을 하기 위한 클래스-인터페이스 사이의 구조체
*/
@mixin square($size){
    $calculated: 32px*$size;
    width:$calculated;
    height:$calculated;
}

.SassComponent{
    display: flex;
    .box{
        background: red;
        cursor: pointer;
        transition: all 0.3s ease-in;

        &.red{  // &: .red 클래스가 .box와 함께 사용되었을 때
          background: $red;
          @include square(1);
        }
        &.orange{  
            background: $orange;
            @include square(2);
        }
        &.yellow{  
            background: $yellow;
            @include square(3);
        }
        &.green{  
            background: $green;
            @include square(4);
        }
        &.blue{  
            background: $blue;
            @include square(5);
        }
        &.indigo{  
            background: $indigo;
            @include square(6);
        }
        &.violet{  
            background: $violet;
            @include square(7);
        }
        &:hover {
            //.box에 마우스를 올렸을 때
            background: black;;
        }
    }
}